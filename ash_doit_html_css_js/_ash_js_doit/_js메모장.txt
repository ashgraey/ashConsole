1. let 예약어
- 특징 : 블록{} 영역의 스코프의 범위
- 블록{}으로 묶은 부분에서만 유효함
- 전역변수로 선언하고 싶다면 변수 이름과 초깃값만 할당하면 됨
* 재할당은 가능하지만 재선언은 불가능 : 같은 변수의 이름을 사용할 걱정이 없다.
- 호이스팅이 없는 변수 : var 예약어의 변수는 선언만 하여도 값이 undefined로 설정되지만 let 예약어의 변수는 오류메세지가 뜬다. 초기화를 하고 사용해야함

2. const 예약어\
- 특징 : 상수변수 // 상수란? 프로그램안에서 변하지 않는 값, 블록{} 영역의 스코프를 가진다.
- 변하지 않는 값을 변수로 선언할때 예약어 const를 사용한다.
- 재선언과 재할당 불가능

# let과 const 정리
- 값이 자주 바뀌는 변수 let
- 값이 고정되어있고 재할당이 없는 변수 const

# 자바스크립트 변수를 사용하는 tip
1) 전역변수는 최소한으로 사용한다.
2) var변수는 함수의 시작부분에만 사용한다. 
3) for문에서 카운터 변수를 사용할때에는 let예약어를 사용하도록 하자.
4) ES6를 사용한다면 var보다 let을 사용하는 것이 좋다. => var예약어는 재선언도 가능하기때문에 변수명이 중복될 가능성있고 그로인한 오류 발생률이 높음, let예약어는 재할당은 가능하지만 재선언은 
불가능 하기 때문에 오류 발생률을 낮출 수 있다.


3. 재사용성 
- 입력을 바꿔 여러 번 사용할 수 있는 성질 = 재사용성
- 매개변수 : 외부에서 값을 받아 줄 변수
- 인수 : 실제 값
- return : 값의 반환

4. 함수 표현식
- 익명 함수 : 이름없는 함수, 함수자체가 식 // function(a,b){ returnt a + b; }
- 즉시 실행 함수 : 함수를 실행하는 순간에 자바스크립트 해석기에서 함수를 해석 (function(매개변수) { 명령 } (인수));
- 화살표 함수 : 익명 함수에만 사용가능. (매개변수) => { 함수 내용 }

5. 이벤트와 이벤트 핸들러
1) 이벤트 : 화면 버튼글릭, 항목선택등의 행위(웹브라우저나 사용자가 행하는 어떠한 동작)
- 이벤트는 웹 문서 영역 안에서 이루어지는 동작만을 말한다.
- form의 내용을 입력할때 주로 발생

2) 이벤트 핸들러 : 이벤트가 발생하였을 때 실행되는 함수
- 이벤트가 발생한 HTML 태그에 이벤트 처리기를 직접 연결
- 사용법 : HTML태그 안에서 'on' 다음에 '이벤트명'을 붙여서 속성의 이름을 만들고, 이벤트 처리기의 함수명의 작성 ex/ onclick = "alert('안녕하세요')"

6. JS dom(document object model)
- 정의 : 자바스크립트를 이용하여 웹 문서에 접근하고 제어할 수 있도록 객체를 사용해 웹 문서를 체계적으로 정리하는 방법.
1) js는 html의 모든 요소를 각각 다른 객체로 인지하여 처리한다.
- dom의 구성하는 기본원칙
1) 모든 HTML태그는 요소(Element)노드이다.
2) HTML 태그에 사용하는 텍스트 내용은 자식 노드인 텍스트(Text)노드이다.
3) HTML 태그에 있는 속성은 자식 노드인 속성(Attribute)노드이다.
4) 주석은 주석(Comment) 노드이다.


